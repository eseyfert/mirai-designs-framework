@use '@miraidesigns/base';
@use '@miraidesigns/fx';
@use '@miraidesigns/utils';
@use './variables';

@mixin control() {
	display: inline-flex;
	align-items: center;
	vertical-align: middle;
	user-select: none;
}

@mixin container() {
	position: relative;
	flex: 0 0 utils.px2rem(variables.$size);
	display: inline-block;
	height: utils.px2rem(variables.$size);
	width: utils.px2rem(variables.$size);
	padding: utils.px2rem(variables.$padding);
	box-sizing: content-box;
}

@mixin disabled() {
	opacity: 0.65;
	cursor: default;
	pointer-events: none;

	& ~ label {
		opacity: 0.65;
		pointer-events: none;
	}
}

@mixin indeterminate() {
	.#{base.$prefix}-checkbox__box {
		border-color: variables.$checked-border-color;
	}

	.#{base.$prefix}-checkbox__indeterminate {
		opacity: 1;
		transform: none;
	}
}

@mixin box() {
	@include fx.animation-standard(border-color, 100ms);

	position: relative;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	height: utils.px2rem(variables.$box-size);
	width: utils.px2rem(variables.$box-size);
	border: utils.px2rem(variables.$border-size) solid variables.$border-color;
	border-radius: utils.px2rem(variables.$border-radius);
	pointer-events: none;
}

@mixin check() {
	position: absolute;
	top: -#{utils.px2rem(5px)};
	left: -#{utils.px2rem(3px)};
	opacity: 0;
	height: utils.px2rem(variables.$check-size);
	width: utils.px2rem(variables.$check-size - (variables.$border-size * 2));
	fill: variables.$check-color;
	transform: scale(0.3);
	transition: opacity 100ms fx.$standard-curve-timing-function, transform 100ms fx.$standard-curve-timing-function;
	pointer-events: none;
}

@mixin input() {
	position: absolute;
	top: 0;
	left: 0;
	opacity: 0;
	height: utils.px2rem(variables.$input-size);
	width: utils.px2rem(variables.$input-size);
	margin: 0;

	&:hover {
		cursor: pointer;
	}

	&:disabled {
		cursor: default;
		pointer-events: none;
	}
}

@mixin input-hover() {
	&:hover:not(.#{base.$prefix}-checkbox__input:checked) ~ .#{base.$prefix}-checkbox__box {
		border-color: variables.$hover-border-color;
	}
}

@mixin input-checked() {
	&:checked ~ .#{base.$prefix}-checkbox__box {
		border-color: variables.$checked-border-color;

		.#{base.$prefix}-checkbox__check {
			opacity: 1;
			transform: none;
		}
	}
}

@mixin styles() {
	.#{base.$prefix}-control {
		@include control();
	}

	.#{base.$prefix}-checkbox {
		@include container();

		// State: Disabled
		&--disabled {
			@include disabled();
		}

		// State: Indeterminate
		&--indeterminate {
			@include indeterminate();
		}

		&__box {
			@include box();
		}

		&__check,
		&__indeterminate {
			@include check();
		}

		&__input {
			@include input();

			// State: Hover
			@include input-hover();

			// State: Checked
			@include input-checked();
		}
	}
}
